{
  "id": "fd_estimator_001",
  "name": "Fractal Dimension Estimator",
  "description": "This algorithm estimates the fractal dimension of a time series using a log-log plot of the variogram. It analyzes sub-series within a specified window to calculate the mean absolute differences between lags, providing insights into the complexity of the data.",
  "algorithm_type": "TechnicalPattern",
  "prompt": "import pandas as pd\nimport numpy as np\n\ndef fractal_dimension(series, window):\n    # Estimate fractal dimension using log-log plot of variogram\n    fd = np.full(series.shape, np.nan)\n    for i in range(window, len(series)):\n        sub_series = series[i - window:i]\n        lag1 = np.abs(sub_series[1:].values - sub_series[:-1].values).mean()\n        lag2 = np.abs(sub_series[2:].values - sub_series[:-2].values).mean()\n        if lag1 > 0 and lag2 > 0:\n            fd[i] = np.log(lag2 / lag1) / np.log(2)\n    return fd\n\ndef dynamic_range_adaptive_volatility(data, window=14):\n    # Calculate range and volume weighted volatility\n    high_low = data['high'] - data['low']\n    log_range = np.log(high_low.replace(0, np.nan))  # avoid log(0)\n    vol_weighted_range = log_range * (data['volume'] / data['volume'].rolling(window).mean())\n    vol_weighted_vol = vol_weighted_range.rolling(window).std()\n    return vol_weighted_vol.fillna(method='bfill')\n\ndef unique_fractal_volatility_breakout_strategy(data):\n    data = data.copy()\n    \n    # Calculate fractal dimension on closing price\n    data['fd'] = fractal_dimension(data['close'], window=20)\n    \n    # Calculate dynamic volatility adaptive to volume and range\n    data['dyn_vol'] = dynamic_range_adaptive_volatility(data, window=14)\n    \n    # Normalize fractal dimension between 1 and 2 (typical range)\n    data['fd_norm'] = (data['fd'] - 1) / 1\n    data['fd_norm'] = data['fd_norm'].clip(0, 1)\n    \n    # Calculate volatility breakout threshold adapting to fractal dimension\n    data['vol_break'] = data['close'].shift(1) * (1 + data['dyn_vol'] * data['fd_norm'] * 0.5)\n    data['vol_break_down'] = data['close'].shift(1) * (1 - data['dyn_vol'] * data['fd_norm'] * 0.5)\n    \n    # Generate signals: long if price breaks above adaptive threshold and fd < 1.5 (trending), short if breaks below and fd > 1.5 (more noisy)\n    data['signal'] = 0\n    data.loc[(data['close'] > data['vol_break']) & (data['fd'] < 1.5), 'signal'] = 1\n    data.loc[(data['close'] < data['vol_break_down']) & (data['fd'] > 1.5), 'signal'] = -1\n    \n    # Exit signals: revert if price returns within threshold band\n    data.loc[(data['close'] < data['vol_break']) & (data['signal'].shift(1) == 1), 'signal'] = 0\n    data.loc[(data['close'] > data['vol_break_down']) & (data['signal'].shift(1) == -1), 'signal'] = 0\n    \n    # Forward fill signals responsibly (hold position)\n    data['signal'] = data['signal'].replace(to_replace=0, method='ffill').fillna(0)\n    \n    return data[['open', 'high', 'low', 'close', 'volume', 'fd', 'dyn_vol', 'vol_break', 'vol_break_down', 'signal']]",
  "blueprint": {
    "nodes": [
      {
        "id": "mds",
        "type": "market_data_source",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": {
          "type": "day",
          "interval": 1
        }
      },
      {
        "id": "smaVol",
        "type": "sma",
        "options": [
          {
            "id": "period",
            "value": 14,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "ratio",
        "type": "div",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "atr14",
        "type": "atr",
        "options": [
          {
            "id": "period",
            "value": 14,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": {
          "type": "day",
          "interval": 1
        }
      },
      {
        "id": "dynVol",
        "type": "mul",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "prevClose",
        "type": "lag",
        "options": [
          {
            "id": "period",
            "value": 1,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "upThresh",
        "type": "add",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "lowThresh",
        "type": "sub",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "breakUp",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "breakDown",
        "type": "lt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "hurst",
        "type": "hurst_exponent",
        "options": [
          {
            "id": "min_period",
            "value": 20,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "const2",
        "type": "number",
        "options": [
          {
            "id": "value",
            "value": 2,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "fdCalc",
        "type": "sub",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "const1_5",
        "type": "number",
        "options": [
          {
            "id": "value",
            "value": 1.5,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "fdBelow",
        "type": "lt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "fdAbove",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "longCond",
        "type": "logical_and",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "shortCond",
        "type": "logical_and",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "executor",
        "type": "trade_signal_executor",
        "options": [
          {
            "id": "closeIfIndecisive",
            "value": false,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      }
    ],
    "edges": [
      {
        "source": {
          "id": "mds",
          "handle": "v"
        },
        "target": {
          "id": "smaVol",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "mds",
          "handle": "v"
        },
        "target": {
          "id": "ratio",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "smaVol",
          "handle": "result"
        },
        "target": {
          "id": "ratio",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "atr14",
          "handle": "result"
        },
        "target": {
          "id": "dynVol",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "ratio",
          "handle": "result"
        },
        "target": {
          "id": "dynVol",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mds",
          "handle": "c"
        },
        "target": {
          "id": "prevClose",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "prevClose",
          "handle": "result"
        },
        "target": {
          "id": "upThresh",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "dynVol",
          "handle": "result"
        },
        "target": {
          "id": "upThresh",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "prevClose",
          "handle": "result"
        },
        "target": {
          "id": "lowThresh",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "dynVol",
          "handle": "result"
        },
        "target": {
          "id": "lowThresh",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mds",
          "handle": "c"
        },
        "target": {
          "id": "breakUp",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "upThresh",
          "handle": "result"
        },
        "target": {
          "id": "breakUp",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mds",
          "handle": "c"
        },
        "target": {
          "id": "breakDown",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "lowThresh",
          "handle": "result"
        },
        "target": {
          "id": "breakDown",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mds",
          "handle": "c"
        },
        "target": {
          "id": "hurst",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "const2",
          "handle": "result"
        },
        "target": {
          "id": "fdCalc",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "hurst",
          "handle": "result"
        },
        "target": {
          "id": "fdCalc",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "fdCalc",
          "handle": "result"
        },
        "target": {
          "id": "fdBelow",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "const1_5",
          "handle": "result"
        },
        "target": {
          "id": "fdBelow",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "fdCalc",
          "handle": "result"
        },
        "target": {
          "id": "fdAbove",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "const1_5",
          "handle": "result"
        },
        "target": {
          "id": "fdAbove",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "breakUp",
          "handle": "result"
        },
        "target": {
          "id": "longCond",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "fdBelow",
          "handle": "result"
        },
        "target": {
          "id": "longCond",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "breakDown",
          "handle": "result"
        },
        "target": {
          "id": "shortCond",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "fdAbove",
          "handle": "result"
        },
        "target": {
          "id": "shortCond",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "longCond",
          "handle": "result"
        },
        "target": {
          "id": "executor",
          "handle": "long"
        }
      },
      {
        "source": {
          "id": "shortCond",
          "handle": "result"
        },
        "target": {
          "id": "executor",
          "handle": "short"
        }
      }
    ]
  },
  "timestamp": "2025-06-23T15:53:21.499099",
  "tags": [
    "fractal",
    "dimension",
    "variogram",
    "time_series",
    "technical_pattern"
  ]
}