{
  "id": "unique-fractal-momentum-breakout",
  "name": "Fractal Momentum Breakout",
  "description": "This strategy utilizes fractal geometry to detect market regimes and combines it with an adaptive Bollinger Bandwidth breakout. It also incorporates Volume-Weighted Rate of Change (VWROC) to confirm breakout signals, enhancing decision-making in momentum trading.",
  "algorithm_type": "Momentum",
  "prompt": "import pandas as pd\nimport numpy as np\n\ndef fractal_bands_strategy(data):\n    \"\"\"\n    UNIQUE: Combines Fractal Geometry for regime detection with adaptive Bollinger Bandwidth breakout,\n    incorporating Volume-Weighted Rate of Change (VWROC) for confirmation.\n    \"\"\"\n    # Calculate Fractal Dimension using rolling windows (Katz method approximation)\n    def rolling_fractal_dimension(prices, window):\n        N = window\n        fd = np.full_like(prices, np.nan, dtype=np.float64)\n        for i in range(window, len(prices)):\n            pp = prices[i - window:i]\n            L = np.sum(np.abs(np.diff(pp)))\n            d = np.abs(pp[-1] - pp[0])\n            if L == 0 or d == 0:\n                fd[i] = 1.0\n            else:\n                fd[i] = np.log(N) / (np.log(N) + np.log(d / L))\n        return fd\n\n    data = data.copy()\n    \n    # Indicators\n    data['boll_mid'] = data['close'].rolling(window=20).mean()\n    data['boll_std'] = data['close'].rolling(window=20).std()\n    data['upper_band'] = data['boll_mid'] + 2 * data['boll_std']\n    data['lower_band'] = data['boll_mid'] - 2 * data['boll_std']\n    data['bandwidth'] = (data['upper_band'] - data['lower_band']) / data['boll_mid']\n    data['bandwidth_z'] = (data['bandwidth'] - data['bandwidth'].rolling(100).mean()) / (data['bandwidth'].rolling(100).std() + 1e-9)\n    \n    data['fractal'] = rolling_fractal_dimension(data['close'].values, 60)\n    \n    # Volume-Weighted Rate of Change\n    vwroc_period = 10\n    data['vwroc'] = ((data['close']*data['volume']).diff(vwroc_period)/vwroc_period) / \\\n                    ((data['close']*data['volume']).shift(vwroc_period)+1e-9)\n    \n    # Regime detection: fractal > 1.3 = choppy/mean-revert, < 1.2 = trending\n    data['regime'] = np.where(data['fractal'] < 1.2, 'trend', \n                      np.where(data['fractal'] > 1.3, 'mean', 'none'))\n\n    # ENTRY & EXIT LOGIC\n    data['signal'] = 0\n\n    # In Trending Regime: Trade bandwidth breakouts (momentum)\n    buy_cond = (\n        (data['regime'] == 'trend') &\n        (data['bandwidth_z'].shift(1) < -1.2) & \n        (data['bandwidth_z'] > -1.2) &  # Bandwidth breakout from squeeze\n        (data['close'] > data['upper_band']) & \n        (data['vwroc'] > 0.015)\n    )\n    sell_cond = (\n        (data['regime'] == 'trend') &\n        (data['bandwidth_z'].shift(1) < -1.2) & \n        (data['bandwidth_z'] > -1.2) & \n        (data['close'] < data['lower_band']) & \n        (data['vwroc'] < -0.015)\n    )\n\n    # In Mean-Reversion Regime: Fade band extremes\n    fade_long_cond = (\n        (data['regime'] == 'mean') &\n        (data['close'] < data['lower_band']) &\n        (data['vwroc'] > 0)\n    )\n    fade_short_cond = (\n        (data['regime'] == 'mean') &\n        (data['close'] > data['upper_band']) &\n        (data['vwroc'] < 0)\n    )\n\n    data.loc[buy_cond, 'signal'] = 1\n    data.loc[sell_cond, 'signal'] = -1\n    data.loc[fade_long_cond, 'signal'] = 1\n    data.loc[fade_short_cond, 'signal'] = -1\n\n    # Optional: Exit signals after 5 bars or opposite signal\n    data['position'] = 0\n    for i in range(1, len(data)):\n        if data['signal'].iloc[i] == 1:\n            data['position'].iloc[i] = 1\n        elif data['signal'].iloc[i] == -1:\n            data['position'].iloc[i] = -1\n        else:\n            data['position'].iloc[i] = data['position'].iloc[i-1]\n            # Flat position if 5-bar hold",
  "blueprint": {
    "nodes": [
      {
        "id": "src",
        "type": "market_data_source",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": {
          "type": "day",
          "interval": 1
        }
      },
      {
        "id": "bb",
        "type": "bbands",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "",
            "isExposed": false
          },
          {
            "id": "stddev",
            "value": 2,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "hurst",
        "type": "hurst_exponent",
        "options": [
          {
            "id": "min_period",
            "value": 1,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "const045",
        "type": "number",
        "options": [
          {
            "id": "value",
            "value": 0.45,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "const055",
        "type": "number",
        "options": [
          {
            "id": "value",
            "value": 0.55,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "ltTrend",
        "type": "lt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "gtMean",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "gtUpper",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "ltLower",
        "type": "lt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "andTL",
        "type": "logical_and",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "andML",
        "type": "logical_and",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "andTS",
        "type": "logical_and",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "andMS",
        "type": "logical_and",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "anyLong",
        "type": "agg_any_of",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "anyShort",
        "type": "agg_any_of",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "exec",
        "type": "trade_signal_executor",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      }
    ],
    "edges": [
      {
        "source": {
          "id": "src",
          "handle": "c"
        },
        "target": {
          "id": "bb",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "c"
        },
        "target": {
          "id": "hurst",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "c"
        },
        "target": {
          "id": "gtUpper",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "bb",
          "handle": "bbands_upper"
        },
        "target": {
          "id": "gtUpper",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "c"
        },
        "target": {
          "id": "ltLower",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "bb",
          "handle": "bbands_lower"
        },
        "target": {
          "id": "ltLower",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "hurst",
          "handle": "result"
        },
        "target": {
          "id": "ltTrend",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "const045",
          "handle": "result"
        },
        "target": {
          "id": "ltTrend",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "hurst",
          "handle": "result"
        },
        "target": {
          "id": "gtMean",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "const055",
          "handle": "result"
        },
        "target": {
          "id": "gtMean",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "ltTrend",
          "handle": "result"
        },
        "target": {
          "id": "andTL",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "gtUpper",
          "handle": "result"
        },
        "target": {
          "id": "andTL",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "gtMean",
          "handle": "result"
        },
        "target": {
          "id": "andML",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "ltLower",
          "handle": "result"
        },
        "target": {
          "id": "andML",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "ltTrend",
          "handle": "result"
        },
        "target": {
          "id": "andTS",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "ltLower",
          "handle": "result"
        },
        "target": {
          "id": "andTS",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "gtMean",
          "handle": "result"
        },
        "target": {
          "id": "andMS",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "gtUpper",
          "handle": "result"
        },
        "target": {
          "id": "andMS",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "andTL",
          "handle": "result"
        },
        "target": {
          "id": "anyLong",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "andML",
          "handle": "result"
        },
        "target": {
          "id": "anyLong",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "andTS",
          "handle": "result"
        },
        "target": {
          "id": "anyShort",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "andMS",
          "handle": "result"
        },
        "target": {
          "id": "anyShort",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "anyLong",
          "handle": "result"
        },
        "target": {
          "id": "exec",
          "handle": "long"
        }
      },
      {
        "source": {
          "id": "anyShort",
          "handle": "result"
        },
        "target": {
          "id": "exec",
          "handle": "short"
        }
      }
    ]
  },
  "timestamp": "2025-06-23T15:16:27.420431",
  "tags": [
    "momentum",
    "fractal",
    "Bollinger Bands",
    "VWROC",
    "breakout"
  ]
}