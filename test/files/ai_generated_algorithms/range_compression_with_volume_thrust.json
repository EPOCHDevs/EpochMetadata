{
  "id": "unique_id_001",
  "name": "Range Compression with Volume Thrust",
  "description": "This strategy identifies periods of price compression followed by a surge in volume, indicating potential breakout opportunities. It utilizes a range lookback period to assess price stability and a volume thrust multiplier to confirm strength in the breakout direction.",
  "algorithm_type": "TechnicalPattern",
  "prompt": "// @version=5\nstrategy(\"Range Compression with Positive Volume Thrust\", overlay=true, max_bars_back=200)\n\n// === PARAMETERS ===\nrange_lookback     = input.int(20, title=\"Range Lookback\")\nrange_threshold    = input.float(0.5, step=0.01, title=\"Compression Ratio Threshold (%)\") * 0.01\nvol_lookback       = input.int(10, title=\"Positive Volume Thrust Lookback\")\nvol_thrust_mult    = input.float(2.0, title=\"Volume Thrust Multiplier\")\nexit_profit_pct    = input.float(2.0, title=\"TP %\", minval=0.1)/100\nexit_loss_pct      = input.float(1.0, title=\"SL %\", minval=0.1)/100\n\n// === RANGE COMPRESSION MODULE ===\nhh = ta.highest(high, range_lookback)\nll = ta.lowest(low, range_lookback)\nrecent_range = hh - ll\navg_range = ta.sma(high - low, range_lookback)\n\ncompression = recent_range/avg_range\n\n// Condition: Range compressed below threshold\nrange_compressed = compression < range_threshold\n\n// === POSITIVE VOLUME THRUST MODULE ===\npos_vol = close > open ? volume : 0\nsum_pos_vol = ta.sum(pos_vol, vol_lookback)\nsum_tot_vol = ta.sum(volume, vol_lookback)\nthrust = sum_pos_vol / sum_tot_vol\n\nvol_threshold = 1 - 1/vol_thrust_mult  // eg, for 2 = 0.5 (50%+ up volume)\n\npos_thrust = thrust > vol_threshold\n\n// === ENTRY CONDITION ===\n// Enter LONG if:\n// - Range has been compressed below % threshold\n// - Prices are breaking above the recent high (like a \"spring\" out of compression)\n// - Positive Volume Thrust for last N bars\nbreakout = ta.crossover(close, hh[1])  // Breakout above prev only\nlong_condition = range_compressed and pos_thrust and breakout\n\nif long_condition\n    strategy.entry(\"RangeCompLong\", strategy.long)\n\n// === STOPLOSS/TAKEPROFIT ==== \nif strategy.position_size > 0\n    stop_price  = strategy.position_avg_price * (1 - exit_loss_pct)\n    take_profit = strategy.position_avg_price * (1 + exit_profit_pct)\n    strategy.exit(\"L Exit\", from_entry=\"RangeCompLong\", stop=stop_price, limit=take_profit)\n\n// === PLOT Compression/Thrust for visual debugging ===\nplot(compression, color=color.red, title=\"Compression Ratio\")\nplot(thrust, color=color.blue, title=\"Positive Volume Thrust\")",
  "blueprint": {
    "nodes": [
      {
        "id": "ms",
        "type": "market_data_source",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": {
          "type": "day",
          "interval": 1
        }
      },
      {
        "id": "maxH",
        "type": "max",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "minL",
        "type": "min",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "subRange",
        "type": "sub",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "subHL",
        "type": "sub",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "smaDiff",
        "type": "sma",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "divComp",
        "type": "div",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "thresh",
        "type": "number",
        "options": [
          {
            "id": "value",
            "value": 0.005,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "ltComp",
        "type": "lt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "gtCO",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "zeroConst",
        "type": "zero",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "posVolSelect",
        "type": "boolean_select",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "sumPos",
        "type": "sum",
        "options": [
          {
            "id": "period",
            "value": 10,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "sumTot",
        "type": "sum",
        "options": [
          {
            "id": "period",
            "value": 10,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "divThrust",
        "type": "div",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "volThresh",
        "type": "number",
        "options": [
          {
            "id": "value",
            "value": 0.5,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "gtThrust",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "lagHH",
        "type": "lag",
        "options": [
          {
            "id": "period",
            "value": 1,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "crossBreak",
        "type": "crossover",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "allCond",
        "type": "agg_all_of",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "exec",
        "type": "trade_signal_executor",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      }
    ],
    "edges": [
      {
        "source": {
          "id": "ms",
          "handle": "h"
        },
        "target": {
          "id": "maxH",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "ms",
          "handle": "l"
        },
        "target": {
          "id": "minL",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "maxH",
          "handle": "result"
        },
        "target": {
          "id": "subRange",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "minL",
          "handle": "result"
        },
        "target": {
          "id": "subRange",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "ms",
          "handle": "h"
        },
        "target": {
          "id": "subHL",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "ms",
          "handle": "l"
        },
        "target": {
          "id": "subHL",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "subHL",
          "handle": "result"
        },
        "target": {
          "id": "smaDiff",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "subRange",
          "handle": "result"
        },
        "target": {
          "id": "divComp",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "smaDiff",
          "handle": "result"
        },
        "target": {
          "id": "divComp",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "divComp",
          "handle": "result"
        },
        "target": {
          "id": "ltComp",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "thresh",
          "handle": "result"
        },
        "target": {
          "id": "ltComp",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "ms",
          "handle": "c"
        },
        "target": {
          "id": "gtCO",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "ms",
          "handle": "o"
        },
        "target": {
          "id": "gtCO",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "gtCO",
          "handle": "result"
        },
        "target": {
          "id": "posVolSelect",
          "handle": "condition"
        }
      },
      {
        "source": {
          "id": "ms",
          "handle": "v"
        },
        "target": {
          "id": "posVolSelect",
          "handle": "true"
        }
      },
      {
        "source": {
          "id": "zeroConst",
          "handle": "result"
        },
        "target": {
          "id": "posVolSelect",
          "handle": "false"
        }
      },
      {
        "source": {
          "id": "posVolSelect",
          "handle": "result"
        },
        "target": {
          "id": "sumPos",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "ms",
          "handle": "v"
        },
        "target": {
          "id": "sumTot",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "sumPos",
          "handle": "result"
        },
        "target": {
          "id": "divThrust",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "sumTot",
          "handle": "result"
        },
        "target": {
          "id": "divThrust",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "divThrust",
          "handle": "result"
        },
        "target": {
          "id": "gtThrust",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "volThresh",
          "handle": "result"
        },
        "target": {
          "id": "gtThrust",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "maxH",
          "handle": "result"
        },
        "target": {
          "id": "lagHH",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "ms",
          "handle": "c"
        },
        "target": {
          "id": "crossBreak",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "lagHH",
          "handle": "result"
        },
        "target": {
          "id": "crossBreak",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "ltComp",
          "handle": "result"
        },
        "target": {
          "id": "allCond",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "gtThrust",
          "handle": "result"
        },
        "target": {
          "id": "allCond",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "crossBreak",
          "handle": "result"
        },
        "target": {
          "id": "allCond",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "allCond",
          "handle": "result"
        },
        "target": {
          "id": "exec",
          "handle": "long"
        }
      }
    ]
  },
  "timestamp": "2025-06-23T15:38:28.157324",
  "tags": [
    "technical",
    "pattern",
    "volume",
    "breakout",
    "compression"
  ]
}