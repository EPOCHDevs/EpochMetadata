{
  "id": "volatility_contraction_pattern_trader",
  "name": "Volatility Contraction Pattern Trader",
  "description": "This algorithm identifies the volatility contraction pattern by detecting three consecutive lower highs and higher lows within a 20-bar window. It confirms the pattern with a declining 10-bar rolling standard deviation, aiming to capitalize on potential breakouts.",
  "algorithm_type": "TechnicalPattern",
  "prompt": "Create an expert-level TechnicalPattern trading algorithm, in Python, designed for 30-minute candles, that identifies and trades based on the \u201cvolatility contraction\u201d pattern as popularized by Mark Minervini. The algorithm should:\n\n- Detect at least 3 consecutive lower highs and higher lows (tightening price range) over a rolling 20-bar window.\n- Confirm declining 10-bar rolling standard deviation of close prices throughout this pattern.\n- Enter long when price breaks above the highest high of the contraction range accompanied by at least a 30% increase in volume relative to contraction-period average volume.\n- Set initial stop-loss at the lowest low of the contraction period.\n- Exit the position either at a 2x risk-reward target or if price closes back inside the contraction range.\n- Only one position active per instrument; no new trades while in a position.\n- The algorithm must output buy and sell signals clearly, and include inline documentation.",
  "blueprint": {
    "nodes": [
      {
        "id": "src",
        "type": "market_data_source",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "max_high20",
        "type": "max",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "Period",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "min_low20",
        "type": "min",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "Period",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "stddev10",
        "type": "stddev",
        "options": [
          {
            "id": "period",
            "value": 10,
            "name": "Period",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "lowest_eq_stddev",
        "type": "lowest_eq",
        "options": [
          {
            "id": "periods",
            "value": 10,
            "name": "Lookback",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "sma_vol20",
        "type": "sma",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "Period",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "num_1_3",
        "type": "number",
        "options": [
          {
            "id": "value",
            "value": 1.3,
            "name": "Multiplier",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "mul_vol_thresh",
        "type": "mul",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "gt_volume",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "gt_breakout",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "agg_entry",
        "type": "agg_all_of",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "lt_exit",
        "type": "lt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "exec",
        "type": "trade_signal_executor",
        "options": [
          {
            "id": "closeIfIndecisive",
            "value": false,
            "name": "Exit If Indecisive",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      }
    ],
    "edges": [
      {
        "source": {
          "id": "src",
          "handle": "h"
        },
        "target": {
          "id": "max_high20",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "l"
        },
        "target": {
          "id": "min_low20",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "c"
        },
        "target": {
          "id": "stddev10",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "stddev10",
          "handle": "result"
        },
        "target": {
          "id": "lowest_eq_stddev",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "lowest_eq_stddev",
          "handle": "result"
        },
        "target": {
          "id": "agg_entry",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "c"
        },
        "target": {
          "id": "gt_breakout",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "max_high20",
          "handle": "result"
        },
        "target": {
          "id": "gt_breakout",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "v"
        },
        "target": {
          "id": "sma_vol20",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "sma_vol20",
          "handle": "result"
        },
        "target": {
          "id": "mul_vol_thresh",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "num_1_3",
          "handle": "result"
        },
        "target": {
          "id": "mul_vol_thresh",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mul_vol_thresh",
          "handle": "result"
        },
        "target": {
          "id": "gt_volume",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "v"
        },
        "target": {
          "id": "gt_volume",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "gt_volume",
          "handle": "result"
        },
        "target": {
          "id": "agg_entry",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "gt_breakout",
          "handle": "result"
        },
        "target": {
          "id": "agg_entry",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "agg_entry",
          "handle": "result"
        },
        "target": {
          "id": "exec",
          "handle": "long"
        }
      },
      {
        "source": {
          "id": "src",
          "handle": "c"
        },
        "target": {
          "id": "lt_exit",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "min_low20",
          "handle": "result"
        },
        "target": {
          "id": "lt_exit",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "lt_exit",
          "handle": "result"
        },
        "target": {
          "id": "exec",
          "handle": "close"
        }
      }
    ]
  },
  "timestamp": "2025-06-17T10:43:32.272275",
  "tags": [
    "TechnicalPattern",
    "Volatility",
    "Breakout",
    "TradingAlgorithm",
    "Python"
  ]
}