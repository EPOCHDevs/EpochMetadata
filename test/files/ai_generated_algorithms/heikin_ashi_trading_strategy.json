{
  "id": "heikin-ashi-trading-strategy",
  "name": "Heikin-Ashi Trading Strategy",
  "description": "This trading strategy utilizes Heikin-Ashi candles to smooth price data and identify trends more clearly. By calculating the Heikin-Ashi open and close prices, traders can make more informed decisions based on the modified candlestick patterns.",
  "algorithm_type": "TechnicalPattern",
  "prompt": "import pandas as pd\nimport numpy as np\n\ndef trading_strategy(data):\n    # Heikin-Ashi candles\n    ha = data.copy()\n    ha['HA_close'] = (data['open'] + data['high'] + data['low'] + data['close']) / 4\n    ha['HA_open'] = np.nan\n    ha['HA_open'].iloc[0] = (data['open'].iloc[0] + data['close'].iloc[0]) / 2\n    for i in range(1, len(ha)):\n        ha['HA_open'].iloc[i] = (ha['HA_open'].iloc[i-1] + ha['HA_close'].iloc[i-1]) / 2\n    ha['HA_high'] = ha[['high', 'HA_open', 'HA_close']].max(axis=1)\n    ha['HA_low'] = ha[['low', 'HA_open', 'HA_close']].min(axis=1)\n    \n    # Fractal dimension index (FDI): rolling window\n    def fractal_dimension(prices, window=14):\n        fd = np.zeros(len(prices))\n        for i in range(window, len(prices)):\n            ln_n = np.log(window)\n            ln_sum = 0\n            for j in range(1, window):\n                ln_sum += np.log(np.abs(prices.iloc[i-j+1] - prices.iloc[i-j]))\n            ln_e = ln_sum / (window-1)\n            fd[i] = ln_n / (ln_n + ln_e) if ln_e != 0 else 1\n        return pd.Series(fd, index=prices.index)\n    \n    ha['FDI'] = fractal_dimension(ha['HA_close'], window=16)\n    \n    # Klinger Volume Oscillator\n    def kvo(high, low, close, volume, fast=34, slow=55, signal=13):\n        # Trend determination\n        dm = ((high + low) / 2).diff()\n        trend = np.where(dm > 0, 1, -1)\n        cm = volume * trend\n        kvo = cm.ewm(span=fast, min_periods=fast).mean() - cm.ewm(span=slow, min_periods=slow).mean()\n        signal_line = kvo.ewm(span=signal, min_periods=signal).mean()\n        return kvo, signal_line\n    ha['kvo'], ha['kvo_signal'] = kvo(ha['HA_high'], ha['HA_low'], ha['HA_close'], data['volume'])\n    \n    # Volatility filter: Median bands\n    ha['median'] = ha['HA_close'].rolling(20).median()\n    ha['mad'] = (np.abs(ha['HA_close'] - ha['median'])).rolling(20).mean()\n    ha['upper_band'] = ha['median'] + 1.4 * ha['mad']\n    ha['lower_band'] = ha['median'] - 1.4 * ha['mad']\n    \n    # Strategy logic\n    ha['signal'] = 0\n    # Long: FDI < 1.45 (trendiness), KVO crosses above its signal, close breaks upper median band\n    long_cond = (\n        (ha['FDI'] < 1.45) &\n        (ha['kvo'] > ha['kvo_signal']) & \n        (ha['kvo'].shift(1) <= ha['kvo_signal'].shift(1)) &\n        (ha['HA_close'] > ha['upper_band'])\n    )\n    # Short: FDI < 1.45 (trendiness), KVO crosses below its signal, close breaks lower median band\n    short_cond = (\n        (ha['FDI'] < 1.45) &\n        (ha['kvo'] < ha['kvo_signal']) &\n        (ha['kvo'].shift(1) >= ha['kvo_signal'].shift(1)) &\n        (ha['HA_close'] < ha['lower_band'])\n    )\n    ha.loc[long_cond, 'signal'] = 1\n    ha.loc[short_cond, 'signal'] = -1\n    \n    return ha",
  "blueprint": {
    "nodes": [
      {
        "id": "mds",
        "type": "market_data_source",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": {
          "type": "day",
          "interval": 1
        }
      },
      {
        "id": "bb",
        "type": "bbands",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "",
            "isExposed": false
          },
          {
            "id": "stddev",
            "value": 2,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "gt_u",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "lt_l",
        "type": "lt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "kvo1",
        "type": "kvo",
        "options": [
          {
            "id": "short_period",
            "value": 34,
            "name": "",
            "isExposed": false
          },
          {
            "id": "long_period",
            "value": 55,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": {
          "type": "day",
          "interval": 1
        }
      },
      {
        "id": "ema1",
        "type": "ema",
        "options": [
          {
            "id": "period",
            "value": 13,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "cross_up",
        "type": "crossover",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "cross_down",
        "type": "crossover",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "long_and",
        "type": "logical_and",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "short_and",
        "type": "logical_and",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "exec1",
        "type": "trade_signal_executor",
        "options": [
          {
            "id": "closeIfIndecisive",
            "value": false,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      }
    ],
    "edges": [
      {
        "source": {
          "id": "mds",
          "handle": "c"
        },
        "target": {
          "id": "bb",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "mds",
          "handle": "c"
        },
        "target": {
          "id": "gt_u",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "bb",
          "handle": "bbands_upper"
        },
        "target": {
          "id": "gt_u",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mds",
          "handle": "c"
        },
        "target": {
          "id": "lt_l",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "bb",
          "handle": "bbands_lower"
        },
        "target": {
          "id": "lt_l",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "kvo1",
          "handle": "result"
        },
        "target": {
          "id": "ema1",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "kvo1",
          "handle": "result"
        },
        "target": {
          "id": "cross_up",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "ema1",
          "handle": "result"
        },
        "target": {
          "id": "cross_up",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "ema1",
          "handle": "result"
        },
        "target": {
          "id": "cross_down",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "kvo1",
          "handle": "result"
        },
        "target": {
          "id": "cross_down",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "cross_up",
          "handle": "result"
        },
        "target": {
          "id": "long_and",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "gt_u",
          "handle": "result"
        },
        "target": {
          "id": "long_and",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "cross_down",
          "handle": "result"
        },
        "target": {
          "id": "short_and",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "lt_l",
          "handle": "result"
        },
        "target": {
          "id": "short_and",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "long_and",
          "handle": "result"
        },
        "target": {
          "id": "exec1",
          "handle": "long"
        }
      },
      {
        "source": {
          "id": "short_and",
          "handle": "result"
        },
        "target": {
          "id": "exec1",
          "handle": "short"
        }
      }
    ]
  },
  "timestamp": "2025-06-23T15:37:47.092816",
  "tags": [
    "Heikin-Ashi",
    "candlestick",
    "trading strategy",
    "technical analysis",
    "trend identification"
  ]
}