{
  "id": "trix_keltner_volatility_strategy",
  "name": "Trix Keltner Volatility Strategy",
  "description": "This trading strategy utilizes the Trix indicator in conjunction with Keltner Channels to identify potential breakout opportunities. It emphasizes the importance of volume spikes to filter signals, ensuring trades are executed during optimal market conditions.",
  "algorithm_type": "TechnicalPattern",
  "prompt": "import pandas as pd\nimport numpy as np\nimport talib\n\ndef trading_strategy(data):\n    \"\"\"\n    Implements a trading strategy based on the interplay of the Trix indicator with \n    a volatility-adaptive channel using Keltner Channels. It combines trend and volatility \n    breakout signals filtered by volume spikes.\n\n    data: DataFrame with columns ['open', 'high', 'low', 'close', 'volume']\n    returns: DataFrame with an added 'signal' column: 1 = buy, -1 = sell, 0 = hold\n    \"\"\"\n    close = data['close']\n    high = data['high']\n    low = data['low']\n    volume = data['volume']\n\n    # Calculate the 9-period TRIX (Triple Exponential Moving Average Rate of Change)\n    trix_length = 9\n    trix = talib.TRIX(close, timeperiod=trix_length)\n\n    # Calculate Keltner Channels (20-period EMA + ATR based band)\n    ema_length = 20\n    atr_length = 14\n    ema = talib.EMA(close, ema_length)\n    atr = talib.ATR(high, low, close, atr_length)\n    multiplier = 1.5\n\n    keltner_upper = ema + (multiplier * atr)\n    keltner_lower = ema - (multiplier * atr)\n\n    # Volume spike detection: volume > 1.5 * rolling average volume(20)\n    avg_vol = volume.rolling(20).mean()\n    vol_spike = volume > 1.5 * avg_vol\n\n    # Signal conditions:\n    # Buy: TRIX crosses above zero & close price breaks above upper Keltner channel with volume spike\n    # Sell: TRIX crosses below zero & close price breaks below lower Keltner channel with volume spike\n    data['trix'] = trix\n    data['keltner_upper'] = keltner_upper\n    data['keltner_lower'] = keltner_lower\n    data['vol_spike'] = vol_spike\n\n    data['trix_prev'] = data['trix'].shift(1)\n    data['close_prev'] = data['close'].shift(1)\n\n    data['signal'] = 0\n    buy_condition = (\n        (data['trix_prev'] < 0) &\n        (data['trix'] > 0) &\n        (data['close'] > data['keltner_upper']) &\n        vol_spike\n    )\n\n    sell_condition = (\n        (data['trix_prev'] > 0) &\n        (data['trix'] < 0) &\n        (data['close'] < data['keltner_lower']) &\n        vol_spike\n    )\n\n    data.loc[buy_condition, 'signal'] = 1\n    data.loc[sell_condition, 'signal'] = -1\n\n    # Clean intermediate columns before returning\n    data.drop(columns=['trix', 'keltner_upper', 'keltner_lower', 'vol_spike', 'trix_prev', 'close_prev'], inplace=True)\n    return data",
  "blueprint": {
    "nodes": [
      {
        "id": "mkt",
        "type": "market_data_source",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": {
          "type": "day",
          "interval": 1
        }
      },
      {
        "id": "trix9",
        "type": "trix",
        "options": [
          {
            "id": "period",
            "value": 9,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "kc",
        "type": "keltner_channels",
        "options": [
          {
            "id": "roll_period",
            "value": 20,
            "name": "",
            "isExposed": false
          },
          {
            "id": "band_multiplier",
            "value": 1.5,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": {
          "type": "day",
          "interval": 1
        }
      },
      {
        "id": "smaVol",
        "type": "sma",
        "options": [
          {
            "id": "period",
            "value": 20,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "const15",
        "type": "number",
        "options": [
          {
            "id": "value",
            "value": 1.5,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "mulThresh",
        "type": "mul",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "volSpike",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "zeroConst",
        "type": "zero",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "crossUp",
        "type": "crossover",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "crossDown",
        "type": "crossover",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "gtCloseUpper",
        "type": "gt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "ltCloseLower",
        "type": "lt",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "buyAll",
        "type": "agg_all_of",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "sellAll",
        "type": "agg_all_of",
        "options": [],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      },
      {
        "id": "executor",
        "type": "trade_signal_executor",
        "options": [
          {
            "id": "closeIfIndecisive",
            "value": false,
            "name": "",
            "isExposed": false
          }
        ],
        "metadata": {
          "parentId": null
        },
        "timeframe": null
      }
    ],
    "edges": [
      {
        "source": {
          "id": "mkt",
          "handle": "c"
        },
        "target": {
          "id": "trix9",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "mkt",
          "handle": "c"
        },
        "target": {
          "id": "gtCloseUpper",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "kc",
          "handle": "upper_band"
        },
        "target": {
          "id": "gtCloseUpper",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mkt",
          "handle": "c"
        },
        "target": {
          "id": "ltCloseLower",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "kc",
          "handle": "lower_band"
        },
        "target": {
          "id": "ltCloseLower",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "trix9",
          "handle": "result"
        },
        "target": {
          "id": "crossUp",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "zeroConst",
          "handle": "result"
        },
        "target": {
          "id": "crossUp",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "zeroConst",
          "handle": "result"
        },
        "target": {
          "id": "crossDown",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "trix9",
          "handle": "result"
        },
        "target": {
          "id": "crossDown",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mkt",
          "handle": "v"
        },
        "target": {
          "id": "smaVol",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "smaVol",
          "handle": "result"
        },
        "target": {
          "id": "mulThresh",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "const15",
          "handle": "result"
        },
        "target": {
          "id": "mulThresh",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "mkt",
          "handle": "v"
        },
        "target": {
          "id": "volSpike",
          "handle": "*0"
        }
      },
      {
        "source": {
          "id": "mulThresh",
          "handle": "result"
        },
        "target": {
          "id": "volSpike",
          "handle": "*1"
        }
      },
      {
        "source": {
          "id": "crossUp",
          "handle": "result"
        },
        "target": {
          "id": "buyAll",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "gtCloseUpper",
          "handle": "result"
        },
        "target": {
          "id": "buyAll",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "volSpike",
          "handle": "result"
        },
        "target": {
          "id": "buyAll",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "crossDown",
          "handle": "result"
        },
        "target": {
          "id": "sellAll",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "ltCloseLower",
          "handle": "result"
        },
        "target": {
          "id": "sellAll",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "volSpike",
          "handle": "result"
        },
        "target": {
          "id": "sellAll",
          "handle": "*"
        }
      },
      {
        "source": {
          "id": "buyAll",
          "handle": "result"
        },
        "target": {
          "id": "executor",
          "handle": "long"
        }
      },
      {
        "source": {
          "id": "sellAll",
          "handle": "result"
        },
        "target": {
          "id": "executor",
          "handle": "short"
        }
      }
    ]
  },
  "timestamp": "2025-06-23T15:00:02.201563",
  "tags": [
    "trading",
    "technical",
    "Keltner",
    "Trix",
    "volatility"
  ]
}