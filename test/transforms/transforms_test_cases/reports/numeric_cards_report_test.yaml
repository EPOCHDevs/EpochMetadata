tests:
  # Numeric Aggregations on Price Data
  - title: "Numeric Cards Report - Mean Price"
    input:
      price: [100.0, 102.0, 98.0, 104.0, 96.0, 106.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Mean Price"
                value: 101.0  # (100+102+98+104+96+106)/6 = 606/6 = 101
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_mean"
      agg: "mean"
      category: "Statistics"
      title: "Mean Price"
      group: 0
      group_size: 1
      inputs: "input: price"
      timeframe: "1D"

  - title: "Numeric Cards Report - Sum Volume"
    input:
      volume: [1000, 2000, 3000, 4000, 5000]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Sum Volume"
                value: 15000  # 1000+2000+3000+4000+5000 = 15000
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_sum"
      agg: "sum"
      category: "Statistics"
      title: "Sum Volume"
      group: 0
      group_size: 1
      inputs: "input: volume"
      timeframe: "1D"

  - title: "Numeric Cards Report - Max Price"
    input:
      price: [100.0, 102.0, 98.0, 104.0, 96.0, 106.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Max Price"
                value: 106.0  # maximum value
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_max"
      agg: "max"
      category: "Statistics"
      title: "Max Price"
      group: 0
      group_size: 1
      inputs: "input: price"
      timeframe: "1D"

  - title: "Numeric Cards Report - Min Price"
    input:
      price: [100.0, 102.0, 98.0, 104.0, 96.0, 106.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Min Price"
                value: 96.0  # minimum value
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_min"
      agg: "min"
      category: "Statistics"
      title: "Min Price"
      group: 0
      group_size: 1
      inputs: "input: price"
      timeframe: "1D"

  - title: "Numeric Cards Report - Count Records"
    input:
      price: [100.0, 102.0, 98.0, 104.0, 96.0, 106.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Count Records"
                value: 6  # count of non-null values
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_count"
      agg: "count"
      category: "Statistics"
      title: "Count Records"
      group: 0
      group_size: 1
      inputs: "input: price"
      timeframe: "1D"

  - title: "Numeric Cards Report - Product"
    input:
      multiplier: [2.0, 3.0, 2.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Product"
                value: 12.0  # 2.0 * 3.0 * 2.0 = 12.0
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_product"
      agg: "product"
      category: "Statistics"
      title: "Product"
      group: 0
      group_size: 1
      inputs: "input: multiplier"
      timeframe: "1D"

  # Statistical Aggregations
  - title: "Numeric Cards Report - Standard Deviation"
    input:
      values: [1.0, 2.0, 3.0, 4.0, 5.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Standard Deviation"
                value: 1.5811388300841898
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_stddev"
      agg: "stddev"
      category: "Statistics"
      title: "Standard Deviation"
      group: 0
      group_size: 1
      inputs: "input: values"
      timeframe: "1D"

  - title: "Numeric Cards Report - Variance"
    input:
      values: [1.0, 2.0, 3.0, 4.0, 5.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Variance"
                value: 2.5
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_variance"
      agg: "variance"
      category: "Statistics"
      title: "Variance"
      group: 0
      group_size: 1
      inputs: "input: values"
      timeframe: "1D"

  # Count Aggregations
  - title: "Numeric Cards Report - Count All"
    input:
      values: [1.0, 2.0, 3.0, 4.0, 5.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Count All"
                value: 5
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_count_all"
      agg: "count_all"
      category: "Statistics"
      title: "Count All"
      group: 0
      group_size: 1
      inputs: "input: values"
      timeframe: "1D"

  - title: "Numeric Cards Report - Count Distinct"
    input:
      values: [1.0, 2.0, 2.0, 3.0, 3.0, 3.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Count Distinct"
                value: 3
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_count_distinct"
      agg: "count_distinct"
      category: "Statistics"
      title: "Count Distinct"
      group: 0
      group_size: 1
      inputs: "input: values"
      timeframe: "1D"

  # Advanced Statistical Aggregations
  - title: "Numeric Cards Report - Approximate Median"
    input:
      values: [1.0, 2.0, 3.0, 4.0, 5.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Approximate Median"
                value: 3.0
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_approx_median"
      agg: "approximate_median"
      category: "Statistics"
      title: "Approximate Median"
      group: 0
      group_size: 1
      inputs: "input: values"
      timeframe: "1D"

  - title: "Numeric Cards Report - Quantile"
    input:
      values: [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0]
    expect:
      type: "tearsheet"
      cards:
        cards:
          - category: "Statistics"
            group_size: 1
            type: "WidgetCard"
            data:
              - title: "Quantile"
                value: 5.5
                group: 0
                type: "TypeDecimal"
    options:
      transform_name: "numeric_cards_report"
      output_id: "test_quantile"
      agg: "quantile"
      category: "Statistics"
      title: "Quantile"
      group: 0
      group_size: 1
      inputs: "input: values"
      timeframe: "1D"